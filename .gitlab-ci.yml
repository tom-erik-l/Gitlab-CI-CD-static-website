stages:
  - build
  - test
  - deploy review
  - deploy staging
  - deploy production
  - production tests

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - ".\\node_modules"

variables:
  STAGING_DOMAIN: sweet-answer-staging.surge.sh
  PRODUCTION_DOMAIN: sweet-answer.surge.sh

build website:
  stage: build
  only:
    - master
    - merge_requests
  script: 
    - SET NODE_EXTRA_CA_CERTS=C:\Trainings\zScalerRootCertificate.cer
    - SET NODE_TLS_REJECT_UNAUTHORIZED=0
    - call npm config set strict-ssl=false
    - call npm config set cafile C:\Trainings\zScalerRootCertificate.cer
    - echo %CI_COMMIT_SHORT_SHA%
    - call npm install
    - call npm install -g gatsby-cli
    - call gatsby build
    - ls
    - echo "sed -i 's/%%%%VERSION%%%%/%CI_COMMIT_SHORT_SHA%/' .\\public\\index.html"
    - sed -i 's/%%VERSION%%/%CI_COMMIT_SHORT_SHA%/' .\\public\\index.html

  artifacts:
    paths:
      - ".\\public"
      - ".\\.cache"

test artifact:
  stage: test 
  only:
  - master
  - merge_requests
  cache: {}
  script:
    - grep -q "Gatsby" .\\public\\index.html

# test website:
#  stage: test
#  script:
#    - SET NODE_EXTRA_CA_CERTS=C:\Trainings\zScalerRootCertificate.cer
#    - SET NODE_TLS_REJECT_UNAUTHORIZED=0
#    - call npm config set strict-ssl=false
#    - call npm config set cafile C:\Trainings\zScalerRootCertificate.cer
#    - call npm install
#    - call npm install -g gatsby-cli
#    - START /B "" gatsby serve --port 9001 
#    - sleep 30
#    - curl "http://localhost:9001" | tac | tac | grep -q "Gatsby"

deploy review:
  stage: deploy review
  environment: 
    name: review/$CI_COMMIT_REF_NAME
    url: https://sweet-answer-$CI_ENVIRONMENT_SLUG.surge.sh
    on_stop: stop review
  only:
  - merge_requests
  script:
    - call npm install --global surge
    - surge --project ./public --domain sweet-answer-%CI_ENVIRONMENT_SLUG%.surge.sh

stop review:
  stage: deploy review
  only:
    - merge_requests
  environment: 
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  when: manual
  variables:
    GIT_STRATEGY: none
  script:
  - call npm install --global surge
  - surge teardown sweet-answer-%CI_ENVIRONMENT_SLUG%.surge.sh

.deploy_template: &deploy
  only:
    - master
  environment:
    url: http://DOMAIN
  cache: {}
  script:
    - call npm install --global surge
    - surge --project ./public --domain %DOMAIN%

deploy staging:
  <<: *deploy
  stage: deploy staging
  variables:
    DOMAIN: $STAGING_DOMAIN
  environment:
    name: staging


deploy production:
  <<: *deploy
  stage: deploy production
  variables:
    DOMAIN: $PRODUCTION_DOMAIN
  environment:
    name: production
  # when: manual
  # allow_failure: false

production tests:
  stage: production tests
  cache: {}
  only:
  - master
  script:
    - curl "%PRODUCTION_DOMAIN%" | grep -q "Hi people"
    - curl "%PRODUCTION_DOMAIN%" | grep -q "%CI_COMMIT_SHORT_SHA%"